<UserControl x:Class="RepositoryParser.View.WeekdayActivityViews.WeekdayActivityChartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RepositoryParser.View.WeekdayActivityViews"
             xmlns:resw="clr-namespace:RepositoryParser.Properties"
             xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:imageButton="clr-namespace:RepositoryParser.Controls.ImageButton;assembly=RepositoryParser.Controls"
             xmlns:extensions="clr-namespace:RepositoryParser.Controls.Extensions;assembly=RepositoryParser.Controls"
             xmlns:circleHeaderButton="clr-namespace:RepositoryParser.Controls.CircleHeaderButton;assembly=RepositoryParser.Controls"
             xmlns:conventers="clr-namespace:RepositoryParser.Conventers"
             xmlns:enums="clr-namespace:RepositoryParser.Helpers.Enums"
             xmlns:metroChart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:metroLoadingProgressRing="clr-namespace:RepositoryParser.Controls.MetroLoadingProgressRing;assembly=RepositoryParser.Controls"
             xmlns:enum="clr-namespace:RepositoryParser.Core.Enum;assembly=RepositoryParser.Core"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600"
             DataContext="{Binding Source={StaticResource Locator}, Path=WeekdayActivity}"
             x:Name="Root">
    <UserControl.Resources>
        <conventers:CountOfRepositoriesToVisibilityConventer x:Key="CountOfRepositoriesToVisibilityConventer"/>
        <conventers:IntegerToBooleanConventer x:Key="IntegerToBooleanConventer"/>
        <conventers:ChartTypeToVisibilityConventer x:Key="ChartTypeToVisibilityConventer"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock
            Grid.Row="0"
            Visibility="{Binding Path=CountOfSelectedRepositories, 
                                 ConverterParameter={x:Static enums:VisibilityConventerEnumDirection.Inverse},
                                 Converter={StaticResource CountOfRepositoriesToVisibilityConventer}}"
            Text="{x:Static resw:Resources.NoDataToDisplay}"
            Foreground="#666666"
            FontSize="28"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontWeight="Light"
            TextWrapping="WrapWithOverflow"/>

        <TabControl Grid.Row="0"
                    Visibility="{Binding Path=CountOfSelectedRepositories, 
                        ConverterParameter={x:Static enums:VisibilityConventerEnumDirection.Normal},
                        Converter={StaticResource CountOfRepositoriesToVisibilityConventer}}">
            <TabItem Header="{x:Static resw:Resources.Chart}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!--Primary Chart-->
                    <metroChart:StackedBarChart
                        Visibility="{Binding Path=CurrentChartType, 
                                                Converter={StaticResource ChartTypeToVisibilityConventer}, 
                                                ConverterParameter={x:Static enum:ChartType.Primary}}"
                        Grid.Row="0"
                        x:Name="ChartViewInstance"
                        ChartTitle=""
                        ChartSubTitle=""
                        Padding="0"
                        ChartBorderThickness="1"
                        ChartMargin="0"
                        Background="Transparent"
                        ChartLegendVisibility="Visible"
                        Palette="{StaticResource RepositoryAnalyserGradientPalette}"/>
                    <!--Secondary Chart-->
                    <metroChart:StackedBar100Chart
                        Visibility="{Binding Path=CurrentChartType, 
                                                Converter={StaticResource ChartTypeToVisibilityConventer}, 
                                                ConverterParameter={x:Static enum:ChartType.Secondary}}"
                        Grid.Row="0"
                        x:Name="ChartViewInstance2"
                        ChartTitle=""
                        ChartSubTitle=""
                        Padding="0"
                        ChartBorderThickness="1"
                        ChartMargin="0"
                        Background="Transparent"
                        ChartLegendVisibility="Visible"
                        Palette="{StaticResource RepositoryAnalyserGradientPalette}"/>
                    <!--Chart Legend-->
                    <metroChart:Legend 
                        Visibility="{Binding Path=CurrentChartType, 
                                                Converter={StaticResource ChartTypeToVisibilityConventer}, 
                                                ConverterParameter={x:Static enum:ChartType.Primary}}"
                        Grid.Row="1" 
                        ItemsSource="{Binding ChartLegendItems}"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static resw:Resources.List}">
                <DataGrid 
                    ItemsSource="{Binding DataCollection}"
                    CanUserSortColumns="True"
                    AutoGenerateColumns="False"
                    ColumnWidth="auto"
                    IsReadOnly="True"
                    VerticalScrollBarVisibility="Auto"
                    Style="{StaticResource AzureDataGrid}"
                    extensions:DataGridExtensions.LastColumnFill="True"
                      >
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ChartKey}" Header="{x:Static resw:Resources.Weekday}"/>
                        <DataGridTextColumn Binding="{Binding ChartValue}" Header="{x:Static resw:Resources.CountOfCommits}">
                            <DataGridTextColumn.CellStyle>
                                <Style>
                                    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding RepositoryValue}" Header="{x:Static resw:Resources.Repository}"/>
                    </DataGrid.Columns>

                </DataGrid>
            </TabItem>
        </TabControl>
        
        <metroLoadingProgressRing:MetroLoadingProgressRing
            Grid.Row="0"
            Grid.Column="0"
            Text="{x:Static resw:Resources.AnalysingDataMessage}"
            IsDataLoadingFlag="{Binding Path=IsLoading, UpdateSourceTrigger=PropertyChanged}"/>

        <DockPanel 
            Grid.Row="1" 
            HorizontalAlignment="Left" 
            Margin="0" 
            IsEnabled="{Binding CountOfSelectedRepositories, Converter={StaticResource IntegerToBooleanConventer}}">
            <circleHeaderButton:CircleHeaderButton 
                CommandParameter="{Binding ElementName=Root, Path=DataContext}"
                Command="{Binding ExportFileCommand}"
                ImageSource="../../Assets/Icons/PNG_DarkGray/Export-100.png"
                ToolTip="{x:Static resw:Resources.ExportToFileButton}"
                Height="56"
                Width="56"
                ImageHeight="28" 
                ImageWidth="28"
                BorderBrush="{StaticResource AppMainColor}"
                />
            <circleHeaderButton:CircleHeaderButton 
                Command="{Binding SwitchChartTypeCommand}"
                ImageSource="../../Assets/Icons/PNG_DarkGray/Switch On-100.png"
                ToolTip="{x:Static resw:Resources.SwitchChartType}"
                Height="56"
                Width="56"
                ImageHeight="28" 
                ImageWidth="28"
                BorderBrush="{StaticResource AppMainColor}"
                />
        </DockPanel>

    </Grid>
</UserControl>
